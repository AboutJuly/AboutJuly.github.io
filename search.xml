<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[搭建GITHUB代码库]]></title>
      <url>aboutjuly.github.io/2016/08/03/Java/20160801/</url>
      <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><br>   创建github代码库，并用idea提交代码到库中。<br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文="">

<h2 id="搭建GITHUB代码库"><a href="#搭建GITHUB代码库" class="headerlink" title="搭建GITHUB代码库"></a>搭建GITHUB代码库</h2><blockquote>
<ul>
<li><code>在开始下面操作之前你必须熟悉git安装，git简单配置,idea简单使用,还有必须有一个github账号，在下面介绍的内容中不会重点讲解这些。只会重点部分讲解一下。如果对我前面说的内容不清楚的请看我前篇博文“搭建hexo博客”有详细介绍！</code></li>
</ul>
</blockquote>
<h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><blockquote>
<ul>
<li>下载地址： <a href="http://git-scm.com/downloads" target="_blank" rel="external">http://git-scm.com/downloads</a></li>
<li>Git简要使用说明： <a href="http://rogerdudler.github.io/git-guide/index.zh.html" target="_blank" rel="external">http://rogerdudler.github.io/git-guide/index.zh.html</a></li>
<li>Github官方使用说明： <a href="https://help.github.com/articles/set-up-git" target="_blank" rel="external">https://help.github.com/articles/set-up-git</a></li>
</ul>
</blockquote>
<h3 id="配置Git环境变量"><a href="#配置Git环境变量" class="headerlink" title="配置Git环境变量"></a>配置Git环境变量</h3><p><img src="/img/2016/08/01/004.jpg" alt="mahua"></p>
<h3 id="配置Git用户"><a href="#配置Git用户" class="headerlink" title="配置Git用户"></a>配置Git用户</h3><blockquote>
<ul>
<li>打开git.exe输入你的github用户名,邮箱</li>
</ul>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name &quot; Your Name Here &quot;</div><div class="line">git config --global user.email &quot; your_email@example.com &quot;</div></pre></td></tr></table></figure>
<h3 id="在github上创建仓库"><a href="#在github上创建仓库" class="headerlink" title="在github上创建仓库"></a>在github上创建仓库</h3><p><img src="/img/2016/08/01/001.jpg" alt="mahua"></p>
<h2 id="使用IDEA获取项目、提交项目到Github代码库"><a href="#使用IDEA获取项目、提交项目到Github代码库" class="headerlink" title="使用IDEA获取项目、提交项目到Github代码库"></a>使用IDEA获取项目、提交项目到Github代码库</h2><h3 id="在IDEA中配置Git"><a href="#在IDEA中配置Git" class="headerlink" title="在IDEA中配置Git"></a>在IDEA中配置Git</h3><blockquote>
<ul>
<li>选择菜单”File — Settings”，找到”Version Control — Git”：到Git的安装目录下的Git.exe执行文件所在地<br><img src="/img/2016/08/01/002.jpg" alt="mahua"></li>
</ul>
</blockquote>
<h3 id="配置你在Github上注册的账户"><a href="#配置你在Github上注册的账户" class="headerlink" title="配置你在Github上注册的账户"></a>配置你在Github上注册的账户</h3><blockquote>
<ul>
<li>填入你的Github账户信息，点击”Test”按钮测试连接，若链接成功会提示”Connection successful”。保存完成。点击OK，此时可能要你输入IntelliJ IDEA的密码，如果没设，点击确定即可<br><img src="/img/2016/08/01/003.jpg" alt="mahua"></li>
</ul>
</blockquote>
<h3 id="用idea从github代码库下载代码"><a href="#用idea从github代码库下载代码" class="headerlink" title="用idea从github代码库下载代码"></a>用idea从github代码库下载代码</h3><p><img src="/img/2016/08/01/005.jpg" alt="mahua"><br><img src="/img/2016/08/01/006.jpg" alt="mahua"></p>
<h3 id="用idea往github代码库提交代码"><a href="#用idea往github代码库提交代码" class="headerlink" title="用idea往github代码库提交代码"></a>用idea往github代码库提交代码</h3><p><img src="/img/2016/08/01/007.jpg" alt="mahua"><br><img src="/img/2016/08/01/008.jpg" alt="mahua"></p>
<ul>
<li>输入网址 <a href="https://github.com/AboutJuly/code" target="_blank" rel="external">https://github.com/AboutJuly/code</a> 就可以查看到我刚刚提交上去的代码了。</li>
</ul>
</the>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[搭建hexo博客]]></title>
      <url>aboutjuly.github.io/2016/07/27/hexo/20160725/</url>
      <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><br>  本文将讲解如何在github上搭建 Hexo 博客、并编写第一篇博文！<br><a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文="">

<h2 id="部署前介绍"><a href="#部署前介绍" class="headerlink" title="部署前介绍"></a>部署前介绍</h2><h3 id="Hexo-是什么"><a href="#Hexo-是什么" class="headerlink" title="Hexo 是什么"></a>Hexo 是什么</h3><blockquote>
<ul>
<li>Hexo 的中文官网：<a href="http://hexo.io/zh-cn/" target="_blank" rel="external">http://hexo.io/zh-cn/</a></li>
<li>作者 Tommy Chen：<a href="https://zespia.tw/" target="_blank" rel="external">https://zespia.tw/</a></li>
<li>在我的理解里面：Hexo 是一个基于 Node.js 快速、简洁且高效的博客框架，可以将 Markdown 文件快速的生成静态网页，托管在 GitHub Pages 上。</li>
<li>而官网自己是这样说的：<br>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</li>
</ul>
</blockquote>
<h3 id="为什么要用-Hexo"><a href="#为什么要用-Hexo" class="headerlink" title="为什么要用 Hexo"></a>为什么要用 Hexo</h3><blockquote>
<ul>
<li>我：因为其他博客框架太烂了</li>
<li>Tommy Chen：<a href="https://zespia.tw/blog/2012/10/11/hexo-debut/" target="_blank" rel="external">https://zespia.tw/blog/2012/10/11/hexo-debut/</a></li>
</ul>
</blockquote>
<h3 id="适合人群"><a href="#适合人群" class="headerlink" title="适合人群"></a>适合人群</h3><blockquote>
<ul>
<li>有IntelliJ IDEA 基础的程序员（或者你使用的是 JetBrains 家的其他产品）</li>
<li>只想搭建一个技术博客的人（真心别搞太多，你没那么多精力）</li>
</ul>
</blockquote>
<h3 id="文章要求"><a href="#文章要求" class="headerlink" title="文章要求"></a>文章要求</h3><blockquote>
<ul>
<li>如果是 Git，Node.js 的新人，则这篇文章不要间断操作，要一气呵成，不然可能会遇到各种问题。</li>
</ul>
</blockquote>
<h3 id="本文环境"><a href="#本文环境" class="headerlink" title="本文环境"></a>本文环境</h3><blockquote>
<p><code>系统</code>：</p>
<ul>
<li>Windows 10（64 位）</li>
</ul>
<p><code>软件</code>：</p>
<ul>
<li>git：2.7.0.2-64-bit</li>
<li>IntelliJ IDEA：15.0.4</li>
<li>node.js：v5.7.0-64-bit Stable</li>
</ul>
<p><code>账号</code>：</p>
<ul>
<li>Github：<a href="https://github.com/" target="_blank" rel="external">https://github.com/</a></li>
<li>DNSPOD：<a href="https://www.dnspod.cn/" target="_blank" rel="external">https://www.dnspod.cn/</a></li>
</ul>
</blockquote>
<h3 id="搭建所需软件"><a href="#搭建所需软件" class="headerlink" title="搭建所需软件"></a>搭建所需软件</h3><blockquote>
<p><code>各个软件官网</code>:</p>
<ul>
<li>git：<a href="http://git-scm.com/" target="_blank" rel="external">http://git-scm.com/</a></li>
<li>IntelliJ IDEA：<a href="https://www.jetbrains.com/idea/" target="_blank" rel="external">https://www.jetbrains.com/idea/</a></li>
<li>node.js：<a href="http://nodejs.org/" target="_blank" rel="external">http://nodejs.org/</a></li>
</ul>
<p><code>以下提供下载地址</code>：</p>
<ul>
<li>上面三者集合包：<a href="http://pan.baidu.com/s/1bvbo8e" target="_blank" rel="external">http://pan.baidu.com/s/1bvbo8e</a></li>
</ul>
</blockquote>
<h3 id="文章前提"><a href="#文章前提" class="headerlink" title="文章前提"></a>文章前提</h3><blockquote>
<ul>
<li>如果你对上面要求的软件一个都不了解的话，建议你先看如下内容（当然如果你不了解照着文章内容做也是可以成功搭建的）：<ul>
<li>如何搭建一个独立博客——简明Github Pages与Hexo教程</li>
<li>通过Hexo在Github上搭建博客教程</li>
<li>hexo你的博客</li>
<li>手把手教你建github技术博客</li>
<li>如何搭建一个独立博客——简明Github Pages与Hexo教程</li>
<li>windows下搭建hexo博客并将其部署到GitCafe终极教程</li>
<li>使用Hexo搭建博客（三），博客配置、主题和写作</li>
<li>Hexo搭建WiKi</li>
<li>怎么用hexo上传一个README.md到github?</li>
</ul>
</li>
</ul>
</blockquote>
<h3 id="域名绑定"><a href="#域名绑定" class="headerlink" title="域名绑定"></a>域名绑定</h3><blockquote>
<ul>
<li>以下内容了解就可以了<br>如果你一开始就打算要绑定域名，则下面教程中所有可以填写域名的地方你都填写上你要绑定的域名，如果你没独立域名，那就使用 Github 默认给你的：XXXXXX.github.io 域名即可。</li>
</ul>
</blockquote>
<h2 id="部署开始"><a href="#部署开始" class="headerlink" title="部署开始"></a>部署开始</h2><h3 id="git-安装"><a href="#git-安装" class="headerlink" title="git 安装"></a>git 安装</h3><blockquote>
<ul>
<li>双击运行 Git-2.7.0.2-64-bit.exe，接下来一律下一步，不需要多余的选择，假设你安装的目录位置跟我一样：C:\Program Files\Git</li>
<li>打开 Git Bash（路径：C:\Program Files\Git\git-bash.exe），输入：git –version</li>
<li>如下图，如果出现：git version 2.7.0.windows.2，这表示安装成功<br><img src="/img/2016/07/26/001.jpg" alt="mahua"></li>
</ul>
</blockquote>
<h3 id="Node-js-安装"><a href="#Node-js-安装" class="headerlink" title="Node.js 安装"></a>Node.js 安装</h3><blockquote>
<ul>
<li>双击运行 node-v5.7.0-x64.msi，接下来一律下一步，不需要多余的选择。</li>
<li>安装完之后，打开 Git Bash，输入：npm -v</li>
<li>如下图，如果出现：3.6.0，则表示 Node.js 安装成功<br><img src="/img/2016/07/26/002.jpg" alt="mahua"></li>
</ul>
</blockquote>
<h3 id="Node-js-源设置"><a href="#Node-js-源设置" class="headerlink" title="Node.js 源设置"></a>Node.js 源设置</h3><blockquote>
<ul>
<li>在安装 Hexo 之前，先说一下 Node.js 的源，Node.js 官方源默认是：<code>http://registry.npmjs.org</code>，但是由于在国外，说不定你使用的时候就抽风无法下载任何软件。所以我们决定暂时使用淘宝提供的源，淘宝源官网：<code>http://npm.taobao.org/</code></li>
<li>在Git Bash 中我们执行下面这一句（这是一整句的）：</li>
</ul>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">alias cnpm=&quot;npm --registry=https://registry.npm.taobao.org \</div><div class="line">--cache=$HOME/.npm/.cache/cnpm \</div><div class="line">--disturl=https://npm.taobao.org/dist \</div><div class="line">--userconfig=$HOME/.cnpmrc&quot;</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>现在验证下是否可以使用淘宝的 cnpm 命令：</li>
</ul>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cnpm info express</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>如果能输出一大堆介绍，则说明成功了，以后每次要使用淘宝的源都需要这样来。现在除了默认的 npm，还多了一个 cnpm 可以使用，我们下面有关安装的讲解内容也都是基于此临时命令。</li>
<li>如果输出：bash: cnpm: command not found，则表示没成功，需要你在排查下</li>
</ul>
</blockquote>
<h3 id="安装-Hexo-框架"><a href="#安装-Hexo-框架" class="headerlink" title="安装 Hexo 框架"></a>安装 Hexo 框架</h3><blockquote>
<ul>
<li>安装 Hexo（注意，现在是 cnpm 开头了，不是 npm 了）：</li>
</ul>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cnpm install -g hexo-cli</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>安装时间不一定很快，有可能需要等 3 ~ 5 分钟。</li>
<li>安装完有 WARN 警告也没关系的。</li>
</ul>
</blockquote>
<h3 id="创建-Hexo-项目"><a href="#创建-Hexo-项目" class="headerlink" title="创建 Hexo 项目"></a>创建 Hexo 项目</h3><blockquote>
<ul>
<li>现在假设我要创建一个名为 hexo 的项目，项目目录就放在：E:\git_work_space 目录下，所以我们在 E:\git_work_space 目录下创建一个 hexo 目录。现在这个项目的全路径是：E:\git_work_space\hexo</li>
<li>打开 Git Bash：</li>
</ul>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd e:/git_work_space/hexo</div><div class="line">hexo init</div><div class="line">cnpm install</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>显示 WARN 也不用管</li>
<li>安装完成之后，E:\git_work_space\hexo 目录结构是这样的：<br><img src="/img/2016/07/26/003.jpg" alt="mahua"></li>
<li>现在我们启动 hexo 本地服务，看下默认的博客是怎样的，命令：</li>
</ul>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>现在用浏览器访问：<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> ，效果如下图<br><img src="/img/2016/07/26/004.jpg" alt="mahua"></li>
<li>如果要停止 hexo 服务：在 Git Bash 下按 Ctrl + C 即可</li>
</ul>
</blockquote>
<h3 id="选用其他主题"><a href="#选用其他主题" class="headerlink" title="选用其他主题"></a>选用其他主题</h3><blockquote>
<ul>
<li>由于默认主题太大众了，所以现在我们换个主题。</li>
<li>你可以去这里找主题：<ul>
<li>hexo-theme <a href="https://hexo.io/themes/" target="_blank" rel="external">https://hexo.io/themes/</a></li>
<li>hexo-github-theme-list <a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">https://github.com/hexojs/hexo/wiki/Themes</a></li>
<li>有那些好看的hexo主题？ <a href="http://www.zhihu.com/question/24422335" target="_blank" rel="external">http://www.zhihu.com/question/24422335</a></li>
</ul>
</li>
<li>我这里选择的yelee：<a href="https://github.com/MOxFIVE/hexo-theme-yelee" target="_blank" rel="external">https://github.com/MOxFIVE/hexo-theme-yelee</a><ul>
<li>原因是能最大化衬托出：目录、文章内容、代码块。因为我对这个博客的定位就是用来放技术类内容，所以不会让它太杂或是太花。只是目前这个颜色偏浅，后续还需要调整。<br>现在假设你跟我要用的模板是一样：</li>
<li>还是让 Git Bash 保持在 E:\git_work_space\hexo 目录下，然后输入命令：</li>
</ul>
</li>
</ul>
</blockquote>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/MOxFIVE/hexo-theme-yelee.git themes/yelee</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>这样就在 E:\git_work_space\hexo\themes 目录下生成了一个 yelle 文件夹，里面有我们刚刚 clone 下来的主题内容。<ul>
<li>如果以后你不自己修改这个主题的话，可以考虑经常更新下作者的更新内容：</li>
</ul>
</li>
</ul>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd e:/git_work_space/hexo/themes/yelee</div><div class="line">git pull origin master</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>下载好主题文件之后，我们现在要修改 E:\git_work_space\hexo 目录下的项目配置文件：_config.yml，把对应的主题目录名改下，编辑如下图。<br><img src="/img/2016/07/26/005.jpg" alt="mahua"><br>更改主题目录名后，我们还要重新生成主题静态内容：<ul>
<li>继续在 Git Bash 中输入命令：</li>
</ul>
</li>
</ul>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo generate</div><div class="line">hexo server</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>重新访问：<a href="http://localhost:4000/，效果如下图" target="_blank" rel="external">http://localhost:4000/，效果如下图</a><br><img src="/img/2016/07/26/006.jpg" alt="mahua"></li>
</ul>
</blockquote>
<h3 id="创建-Github-pages-并-SSH-授权"><a href="#创建-Github-pages-并-SSH-授权" class="headerlink" title="创建 Github pages 并 SSH 授权"></a>创建 Github pages 并 SSH 授权</h3><blockquote>
<ul>
<li>现在假设你已经有一个 Gtihub 账号，你还需要一个特别的仓库，特别在仓库名就是你的 Github 账号登录名，比如我的用户名是：judasn，那我要创建的仓库名字完整滴填写是：judasn.github.io，具体效果如下图。<br><img src="/img/2016/07/26/007.jpg" alt="mahua"></li>
<li>创建好仓库之后，要本地生成 SSH 秘钥，方便电脑上的 git 软件好提交内容到 Github 上<br>在 Git Bash 中，输入：ssh-keygen -t rsa -C “你的邮箱地址”，然后回车，回车，再回车，一共 3 次回车，具体含义自己 Google。</li>
</ul>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C “OnJuly11@163.com”</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>生成后效果如下图：<br><img src="/img/2016/07/26/008.jpg" alt="mahua"></li>
<li>此时，生成密钥后，在你电脑目录：C:\Users\你的计算机用户名.ssh 下，会生成两个文件：<ul>
<li>私钥：id_rsa</li>
<li>公钥：id_rsa.pub</li>
</ul>
</li>
<li>如果生成的不是这样的文件，那删除掉这两个生成的，重新执行上面的命令，让它再一次生成。</li>
<li>现在用记事本打开 id_rsa.pub，复制文件中的所有内容</li>
<li>访问：<a href="https://github.com/settings/ssh，添加新秘钥，效果如下图" target="_blank" rel="external">https://github.com/settings/ssh，添加新秘钥，效果如下图</a><ul>
<li>Title：自己随便取</li>
<li>Key：把刚刚复制的都粘贴进来<br><img src="/img/2016/07/26/009.png" alt="mahua"></li>
</ul>
</li>
</ul>
</blockquote>
<h3 id="把本地的博客内容同步到-Github-上"><a href="#把本地的博客内容同步到-Github-上" class="headerlink" title="把本地的博客内容同步到 Github 上"></a>把本地的博客内容同步到 Github 上</h3><blockquote>
<ul>
<li>要把本地的静态博客同步到 Github，我们还需要先安装两个跟部署相关的 hexo 插件：</li>
<li>在GIT Bash中输入</li>
</ul>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cnpm install hexo -server --save</div><div class="line">cnpm install hexo-deployer-git --save</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>编辑全局 hexo 的配置文件：_config.yml</li>
<li>官网对此配置的介绍：<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="external">https://hexo.io/zh-cn/docs/configuration.html</a></li>
<li>特别需要注意的是下图中的配置(repo中配合的是你注册github时链接ssh的url地址)：</li>
</ul>
</blockquote>
<p><img src="/img/2016/07/26/011.png" alt="mahua"></p>
<blockquote>
<ul>
<li>编辑全局配置后我们需要重新部署：</li>
<li>输入github的注册邮箱和用户名</li>
</ul>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.email &quot;onJuly11@163.com&quot;</div><div class="line">git config --global user.name &quot;AboutJuly&quot;</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>将hexo上传到github中</li>
</ul>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo generate</div><div class="line">hexo server</div><div class="line">hexo deploy</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>有弹出下面提示框，请输入：yes</li>
</ul>
</blockquote>
<p><img src="/img/2016/07/26/010.png" alt="mahua"></p>
<blockquote>
<ul>
<li>提交成功效果如下：</li>
</ul>
</blockquote>
<p><img src="/img/2016/07/26/012.png" alt="mahua"></p>
<blockquote>
<ul>
<li>访问服务器地址进行检查：<a href="http://aboutjuly.github.io，效果如下" target="_blank" rel="external">http://aboutjuly.github.io，效果如下</a></li>
</ul>
</blockquote>
<p><img src="/img/2016/07/26/013.png" alt="mahua"></p>
<blockquote>
<ul>
<li>通过上面几次流程我们也就可以总结：以后，每次发表新文章要部署都按这样的流程来：</li>
</ul>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo generate</div><div class="line">hexo deploy</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>也因为这几个命令太频繁了，所以又有了精简版的命令：</li>
</ul>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo clean == hexo clean</div><div class="line">hexo g == hexo generate</div><div class="line">hexo s == hexo server</div><div class="line">hexo d == hexo deploy</div></pre></td></tr></table></figure>
<h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><blockquote>
<ul>
<li>至此hexo博客论坛搭建结束,推荐几个网址用来优化你的博客<br>（1）<code>http://code.youmeek.com/2016/02/28/2016/02/Hexo/</code> :这个网址是我搭建博客论坛最主要的技术来源，他的IDEA讲的真不错你们有时间可以去学习一下，对于想从eclipse转IDEA的同学尤其有用<br>（2）<code>http://mahua.jser.me/</code>:这个网址对于在线编写hexo博文非常有用。<br>（3）<code>http://moxfive.coding.me/yelee/</code> :这个网址是yelee模板提供者，提供的关于yelee模板优化的相关内容</li>
</ul>
</blockquote>
</the>]]></content>
    </entry>
    
  
  
</search>
